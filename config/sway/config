# Setting $variables value: Read `man 5 sway` for a complete reference.
# Windows key
set $mod Mod4

# Navigation keys (vim)
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term ghostty

# Application launcher
set $menu wmenu-run

# Font
font pango: JetBrainsMono Nerd Font 16

# Display configuration: Read `man sway-output` for a complete reference.
# Default wallpaper
output * bg ~/Pictures/wallpapers/abomination-v1.png fill

# You can get the names of your outputs by running: swaymsg -t get_outputs
# Monitor configuration
output DP-1 pos 0 0 mode 3840x2160@60Hz
output HDMI-A-1 pos 3840 0 mode 3840x2160@60Hz

# Inactivity configuration: Read `man swayidle` for a complete reference.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
    timeout 600 'swaylock -f -c 000000' \
    timeout 900 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f -c 000000'

# Key bindings: Read `man 5 sway` for a complete reference.
# Basics:
    # Start terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+m exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload this configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the quit sway shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Switch focus to adjacent window/application (similar to Ctrl+Tab)
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window/application around the screen
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

# Workspaces:
    # Switch focus to a specific workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to specified workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # Tell the window/application to resize it's container to accomodate a vertical/horizontal split
    # Therefore, when another application is opened, the windows know how to orient/resize
    bindsym $mod+b splitv
    bindsym $mod+v splith

    # Switch the current container between different layout styles
    # Tabs stacked on top of each other
    bindsym $mod+Shift+s layout stacking
    # Tabs side by side
    bindsym $mod+Shift+t layout tabbed
    # No tabs, just split applications (tiling)
    bindsym $mod+t layout toggle split

    # Make the focused window/application fullscreen
    bindsym $mod+f fullscreen

    # Toggle the focused window/application between tiling and floating modes
    bindsym $mod+Shift+space floating toggle
    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Consecutively highlight/focus the parent container and therefore, many windows/applications
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.
    # Note that windows sent to the scratchpad will be sent and come back in floating mode

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will grow the containers height
    # down will shrink the containers height
    bindsym $left resize shrink width 10px
    bindsym $right resize grow width 10px
    bindsym $up resize grow height 10px
    bindsym $down resize shrink height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Utilities:
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Screenshot
    bindsym $mod+p exec grim -g "$(slurp)" - | swappy -f -
    bindsym $mod+Shift+p exec grim
    # Screen Recording
    # NOTE: HDMI-A-1 is selected as output for now. need a more complete solution to choose outputs
    bindsym $mod+w exec wf-recorder -f ~/Videos/recording_$(date +"%Y-%m-%d_%H:%M:%S.mp4") -o HDMI-A-1
    # NOTE: not recording properly over different screen outputs? keep snip within a single monitor
    bindsym $mod+Shift+w exec wf-recorder -g "$$(slurp)" -f ~/Videos/recording_$(date +"%Y-%m-%d_%H:%M:%S.mp4")
    bindsym $mod+Shift+BackSpace exec killall -s SIGINT wf-recorder

# Hide sway titles in general (removes the title string, and removes the physical title bar)
for_window [title=".*"] title_format ""
for_window [app_id=".*"] border pixel 2

# Status Bar:
# Read `man waybar` for more information about this section.
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
